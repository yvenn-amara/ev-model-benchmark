% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NewfitWavD.r
\name{NewfitWavD}
\alias{NewfitWavD}
\title{NewfitWavD.R}
\usage{
NewfitWavD(formula, data, knots = knots, ngrid = 256,
  numlev = floor(log2(nrow(data)) - 2), filternum = 5, local = T,
  resolution = 16384, family = "DaubLeAsymm", penalty = "MCP",
  conv.thresh = 1e-10, offset = 0, max.iter = ncol(data) * 5, trace = F,
  nfolds = 10, alpha = 0.05, se = TRUE, sig = TRUE, sigma = NULL)
}
\arguments{
\item{formula}{a formula}

\item{data}{dataset}

\item{knots}{a vector (of dimension the number of components) containing the desired knots for the splines modelling the smooth components}

\item{ngrid}{size of a grid of equidistant values to evaluate the fitted components}

\item{penalty}{the nonlinear penalisation method for model selection}

\item{conv.thresh}{convergence stopping value for relative difference in backfitting iterations}

\item{max.iter}{maximum number of backfitting iteration}

\item{trace}{tracing the computations}

\item{nfolds}{nfolds (default = 10) number of cross validation folds}

\item{alpha}{confidence level 1-alpha when se = TRUE}

\item{se}{Logical vector. If TRUE then upper and lower confidence bands at level=1-alpha are returned}
}
\value{
an estimated hybrid model
\item{gspa}{the splines fitted part}
\item{gmw}{the wavelets fitted part}
\item{gridw}{xgrids for the wavelets fitted part}
\item{fHatw}{the estimated wavelets effects}
\item{hfwidth}{the estimated hfwidths for the wavelet effects confidence bands}
\item{fitted}{sum of the splines and wavelets parts}
\item{formula}{model formula}
}
\description{
Inference for an hybrid additive model with a spline part and a wavelet part by backfitting
}
\examples{
 An example of smooth functions (to be compared with splines)
require(gamwave)
require(AdaptFitOS)
f1 <- function(x) return(15*sin(2*pi*x^3))
f2 <- function(x) return(80* x *exp(-x**2))
center<-function(y) return(y-mean(y))
n <- 200
set.seed(1)
x1 <- runif(n)
x1 <- (x1-min(x1))/(max(x1)-min(x1))
x2 <- runif(n)
x2 <- (x2-min(x2))/(max(x2)-min(x2))
x3 <- runif(n)
x3 <- (x3-min(x3))/(max(x3)-min(x3))
g1 <- center(f1(x1))
g2 <- center(f2(x2))
g3 <- center(fTrue(x3))
y <- g1+g2+g3+rnorm(n)*.5
y <- center(y)
A <- cbind(x1,x2,x3)
form<-as.formula("y~s(x1)+s(x2)+w(x3)")
data<-cbind(y,A)
se<-TRUE
knots<-c(40,40)
ngrid<-256
range.x<-c(0,1)
trace=F; nfolds = 10; alpha=0.05;se=TRUE;sig=TRUE;sigma=NULL;
numlev<-floor(log2(nrow(data))-2)
aux<-NewfitWavD(formula=form, data=data, knots=knots, ngrid=ngrid,numlev =numlev,local=T, filternum = 5,resolution = 16384, family = "DaubExPhase", penalty = "MCP", conv.thresh=1.e-10, offset=0, max.iter = ncol(data)*5, trace=F, nfolds = 10, alpha=0.05,se=se,sig=TRUE,sigma=NULL) 
par(mfrow=c(1,3))
plot(aux$gspa$newgrid[,1],center(f1(aux$gspa$newgrid[,1])),lty=2,lwd=2,type="n",ylim=c(-20,14))
polygon(c(aux$gspa$newgrid[,1],rev(aux$gspa$newgrid[,1])),c(aux$gspa$LCB[,1],rev(aux$gspa$UCB[,1])), col="lightgrey", border=FALSE)
lines(aux$gspa$newgrid[,1],center(f1(aux$gspa$newgrid[,1])),lwd=2)
lines(aux$gspa$newgrid[,1],aux$gspa$Shat[,1],col="blue",lwd=2)
plot(aux$gspa$newgrid[,2],center(f2(aux$gspa$newgrid[,2])),lty=2,lwd=2,type="n",ylim=c(-20,14))
polygon(c(aux$gspa$newgrid[,2],rev(aux$gspa$newgrid[,2])),c(aux$gspa$LCB[,2],rev(aux$gspa$UCB[,2])), col="lightgrey", border=FALSE)
lines(aux$gspa$newgrid[,2],center(f2(aux$gspa$newgrid[,2])),lwd=2)
lines(aux$gspa$newgrid[,2],aux$gspa$Shat[,2],col="blue",lwd=2)
plot(aux$gridw[,1],center(fTrue(aux$gridw[,1])),lty=2,lwd=2,type="n",ylim=c(-12,14))
polygon(c(aux$gridw[,1],rev(aux$gridw[,1])),c(aux$fHatw[,1]-aux$hfwidth,rev(aux$fHatw[,1]+aux$hfwidth)), col="lightgrey", border=FALSE)
lines(aux$gridw[,1],center(fTrue(aux$gridw[,1])),lwd=2)
lines(aux$gridw[,1],aux$fHatw[,1],col="blue",lwd=2)
}
\author{
Anestis Antoniadis <anestisa@gmail.com>

Yannig  Goude <yannig.goude@edf.fr>
}

