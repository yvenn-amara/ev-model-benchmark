library(gamwave)
?interpret.formula
f1 <- function(x) return(3*sin(2*pi*x^3)) #
f2 <- function(x) return(15* x *exp(-x**2))#
n <- 200#
set.seed(1)#
x1 <- runif(n)#
x1<-(x1-min(x1))/(max(x1)-min(x1))#
x2 <- runif(n)#
x2<-(x2-min(x2))/(max(x2)-min(x2))#
g1<-f1(x1)-mean(f1(x1))#
g2<-f2(x2)-mean(f2(x2))#
y <- g1+g2+ rnorm(n)*.5#
A<-cbind(x1,x2)#
numlev=floor(log2(n))-1#
fac<-c(rep(1,n/2),rep(2,n/2))#
data <- cbind(y, x1, x2, fac)#
formula <- "y ~ w(x1) + s(x2, k=10)" #
interpret.formula(formula)
f1 <- function(x) return(3*sin(2*pi*x^3))#
f2 <- function(x) return(15* x *exp(-x**2))#
n <- 200#
set.seed(1)#
x1 <- runif(n)#
x1 <- (x1-min(x1))/(max(x1)-min(x1))#
x2 <- runif(n); x2 <- (x2-min(x2))/(max(x2)-min(x2)); g1 <- f1(x1)-mean(f1(x1))#
g2 <- f2(x2)-mean(f2(x2)); y <- g1+g2+ rnorm(n)*.5;  A <- cbind(x1,x2); numlev = floor(log2(n))-1;#
offset = -1# fit with standard wavelets or with hybrid wavelets (uncomment the appropriate lines)#
gmw <- GAMwv(y, A,numlev=(numlev-1), penalty="SCAD", offset=offset)#
gmw <- GAMwv(y, A,numlev=numlev, penalty="SCAD", Hybrid=TRUE)# for comparing with mgcv's gam#
gfit <- gam(y~s(x1)+s(x2)); plotdata <- plot(gfit, pages=1)#
par(mfrow=c(1,2))#
o <- order(x1)#
plot(x1[o], y[o]-g2[o], type="n", xlab="True (dashed); gam (green), wavelet (purple)", ylab="y-g2(.)")#
lines(x1[o], g1[o], lty='dashed', lwd=2)#
points(x1[o], y[o]-g2[o], pch=19, cex=.5)#
lines(x1[o], gmw$Shat[o,1], col='purple',lwd=2)#
lines(plotdata[1][[1]]$x, plotdata[1][[1]]$fit, lty=2, lwd=2, col="green")#
o <- order(x2)#
plot(x2[o],y[o]-g1[o], type="n", xlab="True (dashed); gam (green), wavelet (purple)", ylab="y-g1(.)")#
lines(x2[o], g2[o], lty='dashed',lwd=2)#
points(x2[o], y[o]-g1[o], pch=19, cex=.5)#
lines(x2[o], gmw$Shat[o,2], col='purple', lwd=2)#
lines(plotdata[2][[1]]$x, plotdata[2][[1]]$fit, lty=2, lwd=2, col="green")
datai <- data.frame(cbind(y, x1, x2))#
model <- GAMwv.fit(y ~ w(x1) + w(x2),numlev=numlev,penalty="SCAD", data = cbind(y, x1, x2))# for comparing with mgcv's gam#
model2 <- GAMwv(y, A, numlev=numlev, penalty="SCAD")# for comparing with mgcv's gam#
#
o <- order(x1)#
plot(x1[o], model$Shat[o, 1], lwd=2, type="l")#
o2 <- order(x2)#
plot(x2[o2], model$Shat[o2, 2], lwd=2, type="l")
o <- order(x2)
ines(x2[o], g2[o], lty='dashed',lwd=2)
lines(x2[o], g2[o], lty='dashed',lwd=2)
lines(x2[o], gmw$Shat[o,2], col='purple', lwd=2)
lines(plotdata[2][[1]]$x, plotdata[2][[1]]$fit, lty=2, lwd=2, col="green")
model <- GAMwv.fit(y ~ w(x1) + w(x2),numlev=numlev,Hybrid=TRUE,penalty="SCAD", data = cbind(y, x1, x2))
o <- order(x1)#
plot(x1[o], model$Shat[o, 1], lwd=2, type="l")#
o2 <- order(x2)#
plot(x2[o2], model$Shat[o2, 2], lwd=2, type="l")
lines(plotdata[2][[1]]$x, plotdata[2][[1]]$fit, lty=2, lwd=2, col="green")
lines(x2[o2], g2[o2], lty='dashed',lwd=2)
names(plotdata[[1]])
names(plotdata[[1]].fit)
names(plotdata[[1]]$fit)
polygon(c(plotdata[2][[1]]$x,rev(plotdata[2][[1]]$x)),c(plotdata[2][[1]]$fit+plotdata[2][[1]]$se, rev(plotdata[2][[1]]$fit-plotdata[2][[1]]$se)),border=F,col="skyblue")
lines(plotdata[2][[1]]$x, plotdata[2][[1]]$fit, lty=2, lwd=2, col="green")
lines(x2[o], g2[o], lty='dashed',lwd=2)
q()
