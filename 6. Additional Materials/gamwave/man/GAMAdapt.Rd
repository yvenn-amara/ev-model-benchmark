% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GAMAdapt.R
\name{GAMAdapt}
\alias{GAMAdapt}
\title{GAMAdapt}
\usage{
GAMAdapt(formula, data, knots, ngrid = 256, adap = FALSE, deg = 3,
  tol = 1e-09, tol.theta = 1e-09, niter = 20, niter.var = 200,
  se = FALSE, alpha = 0.05)
}
\arguments{
\item{formula}{a formula describing the additive splines model to be fitted}

\item{data}{dataset}

\item{knots}{a vector (of dimension the number of components) containing the desired knots for the splines modelling the components}

\item{ngrid}{size of a grid of equidistant values to evaluate the fitted components}

\item{adap}{TRUE for spatially adaptive smoothing parameter}

\item{tol}{tolerance for the convergence criterion. Default is 1e-6.}

\item{tol.theta}{tolerance for the convergence criterion (smoothing parameter function routine). Default is 1e-6.}

\item{niter}{a maximum number of iterations for the mean estimation, default is 20.}

\item{niter.var}{a maximum number of iterations for the variance of random effects estimation, default is 50.}

\item{se}{logical vector. If TRUE then upper and lower confidence bands at level 0.95 are returned}

\item{alpha}{confidence level 1-alpha when se = TRUE}

\item{returnFit}{a logical value indicating whether the fitted object should be returned when the maximum number of iterations is reached without convergence of the algorithm. Default is FALSE.}
}
\value{
A list object of class gamwabsp containing the fitted model. The components are:
\item{alpha0}{a real number estimate of the mean}
\item{LCB}{the estimated lower confidence bands}
\item{UCB}{the estimated upper confidence bands}
\item{Shat}{the estimated non-linear effects}
\item{fitted}{fitted values of the additive model}
}
\description{
Fits additive models with spatially adaptive penalized splines
}
\examples{
 An example of smooth functions (to be compared with mgcv)
require(gamwave)
require(AdaptFitOS)
f1 <- function(x) return(15*sin(2*pi*x^3))
f2 <- function(x) return(80* x *exp(-x**2))
center<-function(y) return(y-mean(y))
n <- 200
set.seed(1)
x1 <- runif(n)
x1 <- (x1-min(x1))/(max(x1)-min(x1))
x2 <- runif(n)
x2 <- (x2-min(x2))/(max(x2)-min(x2))
x3 <- runif(n)
x3 <- (x3-min(x3))/(max(x3)-min(x3))
g1 <- center(f1(x1))
g2 <- center(f2(x2))
g3 <- center(fTrue(x3))
y <- g1+g2+g3+rnorm(n)*.5
y <- center(y)
A <- cbind(x1,x2,x3)
form<-as.formula("y~s(x1)+s(x2)+s(x3)")
data<-cbind(y,A)
knots<-c(30,30,30)
se<-TRUE
gspa<-GAMAdapt(formula=form,data=data,knots=knots,ngrid=256,adap=TRUE,deg=3,tol=1.e-9,tol.theta=1.e-9, niter=20, niter.var=200, se=se)
}
\author{
Anestis Antoniadis <anestisa@gmail.com>

Yannig  Goude <yannig.goude@edf.fr>
}

